# This is a basic workflow to help you get started with Actions

name: Manual Run Detector

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      trigger:
        description: 'Switch to use SHA instead of tags on manual builds'
        required: false
        default: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  jobbo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up REPO and TAG environment vars
        run: |
          echo  "REPO=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          echo  "TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      # Runs a set of commands using the runners shell
      - name: Run on Push/Commit
        if: github.event_name == 'push'
        run: |
          echo "${GITHUB_REF}"
          echo "${GITHUB_REF#refs/tags/v}"
          
      - name: Run on workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "${GITHUB_SHA}"
          echo "${GITHUB_SHA:0:6}"
      
      - name: Run when there's no tag
        if: startsWith(github.ref, 'refs/heads')
        run: |
          echo "NO TAG, matched refs/heads"

      - name: Run when there's no tag
        if: ${{ ! startsWith(github.ref, 'refs/tags') }}
        run: |
          echo "NO TAG, inverse match"

      - name: Run when there's no tag -  brackets
        if: !startsWith(github.ref, 'refs/tags')
        run: |
          echo "NO TAG, inverse match"

      - name: Run when there's no tag
        if: startsWith(github.ref, 'refs/tags') == false
        run: |
          echo "NO TAG, inverse match"

      - name: Dump context
        run: |
          echo "${{ github.event_name }}"
          echo "${{ toJSON(github) }}"
        
        

